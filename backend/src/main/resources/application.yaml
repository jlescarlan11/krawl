spring:
  application:
    name: backend

  # Database Configuration
  datasource:
    url: ${DATABASE_URL}?sslmode=${DB_SSLMODE:prefer}&prepareThreshold=0
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      auto-commit: false
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_MIN_IDLE:5}
      leak-detection-threshold: 60000

  # JPA/Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: validate  # Let Flyway handle schema
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 20
          batch_versioned_data: true
          lob:
            non_contextual_creation: true
        order_inserts: true
        order_updates: true

  # Mail (SMTP)
  mail:
    host: ${SPRING_MAIL_HOST}
    port: ${SPRING_MAIL_PORT}
    username: ${SPRING_MAIL_USERNAME:}
    password: ${SPRING_MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
    default-encoding: UTF-8
    test-connection: false

  # File Upload Configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 2MB

  # Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    mixed: true
    validate-on-migrate: false
    locations: classpath:db/migration
    schemas: public
  
  # Cache Configuration
  cache:
    type: simple # ConcurrentMapCacheManager (can be upgraded to Redis/Caffeine)
    cache-names: tags,users,publicGems,publicKrawls

# Server Configuration
server:
  port: ${SERVER_PORT:8080}

# Logging Configuration
logging:
  level:
    com.krawl.backend: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Cloudinary Configuration
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}
  folder: ${CLOUDINARY_FOLDER:krawl-gems}

# Storage Validation Configuration
storage:
  validation:
    max-file-size: ${STORAGE_MAX_FILE_SIZE:10485760} # 10MB in bytes
    allowed-content-types:
      - image/jpeg
      - image/jpg
      - image/png
      - image/webp
      - image/heic

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: alpha
    tags-sorter: alpha
    display-request-duration: true
    doc-expansion: none
  show-actuator: false

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-secret-key-change-this-in-production-min-256-bits}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

# App configuration
app:
  frontend-url: ${FRONTEND_URL:http://localhost:3000}
  password-reset:
    expiry-minutes: ${APP_PASSWORD_RESET_EXPIRY_MINUTES:30}
  registration:
    expiry-minutes: ${APP_REGISTRATION_EXPIRY_MINUTES:60}
  mail:
    from: ${MAIL_FROM}
    fromName: ${MAIL_FROM_NAME:Krawl}

# CAPTCHA Configuration
captcha:
  provider: ${CAPTCHA_PROVIDER:hcaptcha} # hcaptcha | recaptcha
  secret: ${CAPTCHA_SECRET:}

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: false # Enable if using Prometheus